/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 514.0, "minX": 0.0, "maxY": 7792.0, "series": [{"data": [[0.0, 917.0], [0.1, 917.0], [0.2, 917.0], [0.3, 917.0], [0.4, 917.0], [0.5, 920.0], [0.6, 920.0], [0.7, 920.0], [0.8, 920.0], [0.9, 925.0], [1.0, 925.0], [1.1, 925.0], [1.2, 925.0], [1.3, 927.0], [1.4, 927.0], [1.5, 927.0], [1.6, 927.0], [1.7, 929.0], [1.8, 929.0], [1.9, 929.0], [2.0, 929.0], [2.1, 929.0], [2.2, 929.0], [2.3, 929.0], [2.4, 929.0], [2.5, 935.0], [2.6, 935.0], [2.7, 935.0], [2.8, 935.0], [2.9, 935.0], [3.0, 937.0], [3.1, 937.0], [3.2, 937.0], [3.3, 937.0], [3.4, 950.0], [3.5, 950.0], [3.6, 950.0], [3.7, 950.0], [3.8, 955.0], [3.9, 955.0], [4.0, 955.0], [4.1, 955.0], [4.2, 955.0], [4.3, 955.0], [4.4, 955.0], [4.5, 955.0], [4.6, 955.0], [4.7, 955.0], [4.8, 955.0], [4.9, 955.0], [5.0, 955.0], [5.1, 955.0], [5.2, 955.0], [5.3, 955.0], [5.4, 955.0], [5.5, 957.0], [5.6, 957.0], [5.7, 957.0], [5.8, 957.0], [5.9, 957.0], [6.0, 957.0], [6.1, 957.0], [6.2, 957.0], [6.3, 962.0], [6.4, 962.0], [6.5, 962.0], [6.6, 962.0], [6.7, 963.0], [6.8, 963.0], [6.9, 963.0], [7.0, 963.0], [7.1, 967.0], [7.2, 967.0], [7.3, 967.0], [7.4, 967.0], [7.5, 968.0], [7.6, 968.0], [7.7, 968.0], [7.8, 968.0], [7.9, 968.0], [8.0, 973.0], [8.1, 973.0], [8.2, 973.0], [8.3, 973.0], [8.4, 974.0], [8.5, 974.0], [8.6, 974.0], [8.7, 974.0], [8.8, 979.0], [8.9, 979.0], [9.0, 979.0], [9.1, 979.0], [9.2, 984.0], [9.3, 984.0], [9.4, 984.0], [9.5, 984.0], [9.6, 985.0], [9.7, 985.0], [9.8, 985.0], [9.9, 985.0], [10.0, 1005.0], [10.1, 1005.0], [10.2, 1005.0], [10.3, 1005.0], [10.4, 1005.0], [10.5, 1006.0], [10.6, 1006.0], [10.7, 1006.0], [10.8, 1006.0], [10.9, 1006.0], [11.0, 1006.0], [11.1, 1006.0], [11.2, 1006.0], [11.3, 1007.0], [11.4, 1007.0], [11.5, 1007.0], [11.6, 1007.0], [11.7, 1010.0], [11.8, 1010.0], [11.9, 1010.0], [12.0, 1010.0], [12.1, 1011.0], [12.2, 1011.0], [12.3, 1011.0], [12.4, 1011.0], [12.5, 1026.0], [12.6, 1026.0], [12.7, 1026.0], [12.8, 1026.0], [12.9, 1026.0], [13.0, 1036.0], [13.1, 1036.0], [13.2, 1036.0], [13.3, 1036.0], [13.4, 1038.0], [13.5, 1038.0], [13.6, 1038.0], [13.7, 1038.0], [13.8, 1041.0], [13.9, 1041.0], [14.0, 1041.0], [14.1, 1041.0], [14.2, 1043.0], [14.3, 1043.0], [14.4, 1043.0], [14.5, 1043.0], [14.6, 1051.0], [14.7, 1051.0], [14.8, 1051.0], [14.9, 1051.0], [15.0, 1068.0], [15.1, 1068.0], [15.2, 1068.0], [15.3, 1068.0], [15.4, 1068.0], [15.5, 1078.0], [15.6, 1078.0], [15.7, 1078.0], [15.8, 1078.0], [15.9, 1092.0], [16.0, 1092.0], [16.1, 1092.0], [16.2, 1092.0], [16.3, 1094.0], [16.4, 1094.0], [16.5, 1094.0], [16.6, 1094.0], [16.7, 1094.0], [16.8, 1094.0], [16.9, 1094.0], [17.0, 1094.0], [17.1, 1126.0], [17.2, 1126.0], [17.3, 1126.0], [17.4, 1126.0], [17.5, 1141.0], [17.6, 1141.0], [17.7, 1141.0], [17.8, 1141.0], [17.9, 1141.0], [18.0, 1148.0], [18.1, 1148.0], [18.2, 1148.0], [18.3, 1148.0], [18.4, 1151.0], [18.5, 1151.0], [18.6, 1151.0], [18.7, 1151.0], [18.8, 1153.0], [18.9, 1153.0], [19.0, 1153.0], [19.1, 1153.0], [19.2, 1158.0], [19.3, 1158.0], [19.4, 1158.0], [19.5, 1158.0], [19.6, 1165.0], [19.7, 1165.0], [19.8, 1165.0], [19.9, 1165.0], [20.0, 1168.0], [20.1, 1168.0], [20.2, 1168.0], [20.3, 1168.0], [20.4, 1168.0], [20.5, 1171.0], [20.6, 1171.0], [20.7, 1171.0], [20.8, 1171.0], [20.9, 1184.0], [21.0, 1184.0], [21.1, 1184.0], [21.2, 1184.0], [21.3, 1190.0], [21.4, 1190.0], [21.5, 1190.0], [21.6, 1190.0], [21.7, 1192.0], [21.8, 1192.0], [21.9, 1192.0], [22.0, 1192.0], [22.1, 1233.0], [22.2, 1233.0], [22.3, 1233.0], [22.4, 1233.0], [22.5, 1233.0], [22.6, 1236.0], [22.7, 1236.0], [22.8, 1236.0], [22.9, 1236.0], [23.0, 1248.0], [23.1, 1248.0], [23.2, 1248.0], [23.3, 1248.0], [23.4, 1250.0], [23.5, 1250.0], [23.6, 1250.0], [23.7, 1250.0], [23.8, 1260.0], [23.9, 1260.0], [24.0, 1260.0], [24.1, 1260.0], [24.2, 1261.0], [24.3, 1261.0], [24.4, 1261.0], [24.5, 1261.0], [24.6, 1269.0], [24.7, 1269.0], [24.8, 1269.0], [24.9, 1269.0], [25.0, 1269.0], [25.1, 1285.0], [25.2, 1285.0], [25.3, 1285.0], [25.4, 1285.0], [25.5, 1288.0], [25.6, 1288.0], [25.7, 1288.0], [25.8, 1288.0], [25.9, 1296.0], [26.0, 1296.0], [26.1, 1296.0], [26.2, 1296.0], [26.3, 1308.0], [26.4, 1308.0], [26.5, 1308.0], [26.6, 1308.0], [26.7, 1320.0], [26.8, 1320.0], [26.9, 1320.0], [27.0, 1320.0], [27.1, 1346.0], [27.2, 1346.0], [27.3, 1346.0], [27.4, 1346.0], [27.5, 1346.0], [27.6, 1390.0], [27.7, 1390.0], [27.8, 1390.0], [27.9, 1390.0], [28.0, 1401.0], [28.1, 1401.0], [28.2, 1401.0], [28.3, 1401.0], [28.4, 1492.0], [28.5, 1492.0], [28.6, 1492.0], [28.7, 1492.0], [28.8, 1493.0], [28.9, 1493.0], [29.0, 1493.0], [29.1, 1493.0], [29.2, 1540.0], [29.3, 1540.0], [29.4, 1540.0], [29.5, 1540.0], [29.6, 1586.0], [29.7, 1586.0], [29.8, 1586.0], [29.9, 1586.0], [30.0, 1586.0], [30.1, 1619.0], [30.2, 1619.0], [30.3, 1619.0], [30.4, 1619.0], [30.5, 1671.0], [30.6, 1671.0], [30.7, 1671.0], [30.8, 1671.0], [30.9, 1671.0], [31.0, 1671.0], [31.1, 1671.0], [31.2, 1671.0], [31.3, 1795.0], [31.4, 1795.0], [31.5, 1795.0], [31.6, 1795.0], [31.7, 1804.0], [31.8, 1804.0], [31.9, 1804.0], [32.0, 1804.0], [32.1, 1819.0], [32.2, 1819.0], [32.3, 1819.0], [32.4, 1819.0], [32.5, 1819.0], [32.6, 1891.0], [32.7, 1891.0], [32.8, 1891.0], [32.9, 1891.0], [33.0, 2179.0], [33.1, 2179.0], [33.2, 2179.0], [33.3, 2179.0], [33.4, 2245.0], [33.5, 2245.0], [33.6, 2245.0], [33.7, 2245.0], [33.8, 2254.0], [33.9, 2254.0], [34.0, 2254.0], [34.1, 2254.0], [34.2, 2328.0], [34.3, 2328.0], [34.4, 2328.0], [34.5, 2328.0], [34.6, 2413.0], [34.7, 2413.0], [34.8, 2413.0], [34.9, 2413.0], [35.0, 2413.0], [35.1, 2471.0], [35.2, 2471.0], [35.3, 2471.0], [35.4, 2471.0], [35.5, 2479.0], [35.6, 2479.0], [35.7, 2479.0], [35.8, 2479.0], [35.9, 2741.0], [36.0, 2741.0], [36.1, 2741.0], [36.2, 2741.0], [36.3, 2741.0], [36.4, 2741.0], [36.5, 2741.0], [36.6, 2741.0], [36.7, 2760.0], [36.8, 2760.0], [36.9, 2760.0], [37.0, 2760.0], [37.1, 2790.0], [37.2, 2790.0], [37.3, 2790.0], [37.4, 2790.0], [37.5, 2790.0], [37.6, 2791.0], [37.7, 2791.0], [37.8, 2791.0], [37.9, 2791.0], [38.0, 2791.0], [38.1, 2791.0], [38.2, 2791.0], [38.3, 2791.0], [38.4, 3040.0], [38.5, 3040.0], [38.6, 3040.0], [38.7, 3040.0], [38.8, 3040.0], [38.9, 3040.0], [39.0, 3040.0], [39.1, 3040.0], [39.2, 3062.0], [39.3, 3062.0], [39.4, 3062.0], [39.5, 3062.0], [39.6, 3159.0], [39.7, 3159.0], [39.8, 3159.0], [39.9, 3159.0], [40.0, 3159.0], [40.1, 3160.0], [40.2, 3160.0], [40.3, 3160.0], [40.4, 3160.0], [40.5, 3214.0], [40.6, 3214.0], [40.7, 3214.0], [40.8, 3214.0], [40.9, 3302.0], [41.0, 3302.0], [41.1, 3302.0], [41.2, 3302.0], [41.3, 3348.0], [41.4, 3348.0], [41.5, 3348.0], [41.6, 3348.0], [41.7, 3372.0], [41.8, 3372.0], [41.9, 3372.0], [42.0, 3372.0], [42.1, 3373.0], [42.2, 3373.0], [42.3, 3373.0], [42.4, 3373.0], [42.5, 3374.0], [42.6, 3374.0], [42.7, 3374.0], [42.8, 3374.0], [42.9, 3374.0], [43.0, 3389.0], [43.1, 3389.0], [43.2, 3389.0], [43.3, 3389.0], [43.4, 3390.0], [43.5, 3390.0], [43.6, 3390.0], [43.7, 3390.0], [43.8, 3399.0], [43.9, 3399.0], [44.0, 3399.0], [44.1, 3399.0], [44.2, 3410.0], [44.3, 3410.0], [44.4, 3410.0], [44.5, 3410.0], [44.6, 3415.0], [44.7, 3415.0], [44.8, 3415.0], [44.9, 3415.0], [45.0, 3439.0], [45.1, 3439.0], [45.2, 3439.0], [45.3, 3439.0], [45.4, 3439.0], [45.5, 3463.0], [45.6, 3463.0], [45.7, 3463.0], [45.8, 3463.0], [45.9, 3463.0], [46.0, 3463.0], [46.1, 3463.0], [46.2, 3463.0], [46.3, 3464.0], [46.4, 3464.0], [46.5, 3464.0], [46.6, 3464.0], [46.7, 3473.0], [46.8, 3473.0], [46.9, 3473.0], [47.0, 3473.0], [47.1, 3474.0], [47.2, 3474.0], [47.3, 3474.0], [47.4, 3474.0], [47.5, 3486.0], [47.6, 3486.0], [47.7, 3486.0], [47.8, 3486.0], [47.9, 3486.0], [48.0, 3487.0], [48.1, 3487.0], [48.2, 3487.0], [48.3, 3487.0], [48.4, 3637.0], [48.5, 3637.0], [48.6, 3637.0], [48.7, 3637.0], [48.8, 3667.0], [48.9, 3667.0], [49.0, 3667.0], [49.1, 3667.0], [49.2, 3671.0], [49.3, 3671.0], [49.4, 3671.0], [49.5, 3671.0], [49.6, 3685.0], [49.7, 3685.0], [49.8, 3685.0], [49.9, 3685.0], [50.0, 3686.0], [50.1, 3686.0], [50.2, 3686.0], [50.3, 3686.0], [50.4, 3686.0], [50.5, 3728.0], [50.6, 3728.0], [50.7, 3728.0], [50.8, 3728.0], [50.9, 3729.0], [51.0, 3729.0], [51.1, 3729.0], [51.2, 3729.0], [51.3, 3729.0], [51.4, 3729.0], [51.5, 3729.0], [51.6, 3729.0], [51.7, 3747.0], [51.8, 3747.0], [51.9, 3747.0], [52.0, 3747.0], [52.1, 3762.0], [52.2, 3762.0], [52.3, 3762.0], [52.4, 3762.0], [52.5, 3765.0], [52.6, 3765.0], [52.7, 3765.0], [52.8, 3765.0], [52.9, 3765.0], [53.0, 3776.0], [53.1, 3776.0], [53.2, 3776.0], [53.3, 3776.0], [53.4, 3785.0], [53.5, 3785.0], [53.6, 3785.0], [53.7, 3785.0], [53.8, 3788.0], [53.9, 3788.0], [54.0, 3788.0], [54.1, 3788.0], [54.2, 3789.0], [54.3, 3789.0], [54.4, 3789.0], [54.5, 3789.0], [54.6, 3789.0], [54.7, 3789.0], [54.8, 3789.0], [54.9, 3789.0], [55.0, 3794.0], [55.1, 3794.0], [55.2, 3794.0], [55.3, 3794.0], [55.4, 3794.0], [55.5, 3794.0], [55.6, 3794.0], [55.7, 3794.0], [55.8, 3794.0], [55.9, 3795.0], [56.0, 3795.0], [56.1, 3795.0], [56.2, 3795.0], [56.3, 3796.0], [56.4, 3796.0], [56.5, 3796.0], [56.6, 3796.0], [56.7, 3839.0], [56.8, 3839.0], [56.9, 3839.0], [57.0, 3839.0], [57.1, 3849.0], [57.2, 3849.0], [57.3, 3849.0], [57.4, 3849.0], [57.5, 3878.0], [57.6, 3878.0], [57.7, 3878.0], [57.8, 3878.0], [57.9, 3878.0], [58.0, 3878.0], [58.1, 3878.0], [58.2, 3878.0], [58.3, 3878.0], [58.4, 3883.0], [58.5, 3883.0], [58.6, 3883.0], [58.7, 3883.0], [58.8, 3883.0], [58.9, 3883.0], [59.0, 3883.0], [59.1, 3883.0], [59.2, 3883.0], [59.3, 3883.0], [59.4, 3883.0], [59.5, 3883.0], [59.6, 3925.0], [59.7, 3925.0], [59.8, 3925.0], [59.9, 3925.0], [60.0, 3928.0], [60.1, 3928.0], [60.2, 3928.0], [60.3, 3928.0], [60.4, 3928.0], [60.5, 3936.0], [60.6, 3936.0], [60.7, 3936.0], [60.8, 3936.0], [60.9, 3994.0], [61.0, 3994.0], [61.1, 3994.0], [61.2, 3994.0], [61.3, 4016.0], [61.4, 4016.0], [61.5, 4016.0], [61.6, 4016.0], [61.7, 4017.0], [61.8, 4017.0], [61.9, 4017.0], [62.0, 4017.0], [62.1, 4018.0], [62.2, 4018.0], [62.3, 4018.0], [62.4, 4018.0], [62.5, 4023.0], [62.6, 4023.0], [62.7, 4023.0], [62.8, 4023.0], [62.9, 4023.0], [63.0, 4171.0], [63.1, 4171.0], [63.2, 4171.0], [63.3, 4171.0], [63.4, 4249.0], [63.5, 4249.0], [63.6, 4249.0], [63.7, 4249.0], [63.8, 4249.0], [63.9, 4249.0], [64.0, 4249.0], [64.1, 4249.0], [64.2, 4274.0], [64.3, 4274.0], [64.4, 4274.0], [64.5, 4274.0], [64.6, 4349.0], [64.7, 4349.0], [64.8, 4349.0], [64.9, 4349.0], [65.0, 4461.0], [65.1, 4461.0], [65.2, 4461.0], [65.3, 4461.0], [65.4, 4461.0], [65.5, 4462.0], [65.6, 4462.0], [65.7, 4462.0], [65.8, 4462.0], [65.9, 4523.0], [66.0, 4523.0], [66.1, 4523.0], [66.2, 4523.0], [66.3, 4533.0], [66.4, 4533.0], [66.5, 4533.0], [66.6, 4533.0], [66.7, 4534.0], [66.8, 4534.0], [66.9, 4534.0], [67.0, 4534.0], [67.1, 4538.0], [67.2, 4538.0], [67.3, 4538.0], [67.4, 4538.0], [67.5, 4591.0], [67.6, 4591.0], [67.7, 4591.0], [67.8, 4591.0], [67.9, 4591.0], [68.0, 4602.0], [68.1, 4602.0], [68.2, 4602.0], [68.3, 4602.0], [68.4, 4606.0], [68.5, 4606.0], [68.6, 4606.0], [68.7, 4606.0], [68.8, 4607.0], [68.9, 4607.0], [69.0, 4607.0], [69.1, 4607.0], [69.2, 4738.0], [69.3, 4738.0], [69.4, 4738.0], [69.5, 4738.0], [69.6, 4833.0], [69.7, 4833.0], [69.8, 4833.0], [69.9, 4833.0], [70.0, 4889.0], [70.1, 4889.0], [70.2, 4889.0], [70.3, 4889.0], [70.4, 4889.0], [70.5, 4942.0], [70.6, 4942.0], [70.7, 4942.0], [70.8, 4942.0], [70.9, 4944.0], [71.0, 4944.0], [71.1, 4944.0], [71.2, 4944.0], [71.3, 5037.0], [71.4, 5037.0], [71.5, 5037.0], [71.6, 5037.0], [71.7, 5039.0], [71.8, 5039.0], [71.9, 5039.0], [72.0, 5039.0], [72.1, 5065.0], [72.2, 5065.0], [72.3, 5065.0], [72.4, 5065.0], [72.5, 5065.0], [72.6, 5079.0], [72.7, 5079.0], [72.8, 5079.0], [72.9, 5079.0], [73.0, 5089.0], [73.1, 5089.0], [73.2, 5089.0], [73.3, 5089.0], [73.4, 5157.0], [73.5, 5157.0], [73.6, 5157.0], [73.7, 5157.0], [73.8, 5183.0], [73.9, 5183.0], [74.0, 5183.0], [74.1, 5183.0], [74.2, 5184.0], [74.3, 5184.0], [74.4, 5184.0], [74.5, 5184.0], [74.6, 5257.0], [74.7, 5257.0], [74.8, 5257.0], [74.9, 5257.0], [75.0, 5257.0], [75.1, 5258.0], [75.2, 5258.0], [75.3, 5258.0], [75.4, 5258.0], [75.5, 5258.0], [75.6, 5258.0], [75.7, 5258.0], [75.8, 5258.0], [75.9, 5351.0], [76.0, 5351.0], [76.1, 5351.0], [76.2, 5351.0], [76.3, 5364.0], [76.4, 5364.0], [76.5, 5364.0], [76.6, 5364.0], [76.7, 5378.0], [76.8, 5378.0], [76.9, 5378.0], [77.0, 5378.0], [77.1, 5378.0], [77.2, 5378.0], [77.3, 5378.0], [77.4, 5378.0], [77.5, 5378.0], [77.6, 5424.0], [77.7, 5424.0], [77.8, 5424.0], [77.9, 5424.0], [78.0, 5426.0], [78.1, 5426.0], [78.2, 5426.0], [78.3, 5426.0], [78.4, 5430.0], [78.5, 5430.0], [78.6, 5430.0], [78.7, 5430.0], [78.8, 5444.0], [78.9, 5444.0], [79.0, 5444.0], [79.1, 5444.0], [79.2, 5462.0], [79.3, 5462.0], [79.4, 5462.0], [79.5, 5462.0], [79.6, 5464.0], [79.7, 5464.0], [79.8, 5464.0], [79.9, 5464.0], [80.0, 5464.0], [80.1, 5465.0], [80.2, 5465.0], [80.3, 5465.0], [80.4, 5465.0], [80.5, 5490.0], [80.6, 5490.0], [80.7, 5490.0], [80.8, 5490.0], [80.9, 5490.0], [81.0, 5490.0], [81.1, 5490.0], [81.2, 5490.0], [81.3, 5490.0], [81.4, 5490.0], [81.5, 5490.0], [81.6, 5490.0], [81.7, 5491.0], [81.8, 5491.0], [81.9, 5491.0], [82.0, 5491.0], [82.1, 5492.0], [82.2, 5492.0], [82.3, 5492.0], [82.4, 5492.0], [82.5, 5492.0], [82.6, 5505.0], [82.7, 5505.0], [82.8, 5505.0], [82.9, 5505.0], [83.0, 5507.0], [83.1, 5507.0], [83.2, 5507.0], [83.3, 5507.0], [83.4, 5507.0], [83.5, 5507.0], [83.6, 5507.0], [83.7, 5507.0], [83.8, 5507.0], [83.9, 5507.0], [84.0, 5507.0], [84.1, 5507.0], [84.2, 5539.0], [84.3, 5539.0], [84.4, 5539.0], [84.5, 5539.0], [84.6, 5541.0], [84.7, 5541.0], [84.8, 5541.0], [84.9, 5541.0], [85.0, 5541.0], [85.1, 5546.0], [85.2, 5546.0], [85.3, 5546.0], [85.4, 5546.0], [85.5, 5569.0], [85.6, 5569.0], [85.7, 5569.0], [85.8, 5569.0], [85.9, 5575.0], [86.0, 5575.0], [86.1, 5575.0], [86.2, 5575.0], [86.3, 5580.0], [86.4, 5580.0], [86.5, 5580.0], [86.6, 5580.0], [86.7, 5605.0], [86.8, 5605.0], [86.9, 5605.0], [87.0, 5605.0], [87.1, 5607.0], [87.2, 5607.0], [87.3, 5607.0], [87.4, 5607.0], [87.5, 5607.0], [87.6, 5619.0], [87.7, 5619.0], [87.8, 5619.0], [87.9, 5619.0], [88.0, 5625.0], [88.1, 5625.0], [88.2, 5625.0], [88.3, 5625.0], [88.4, 5626.0], [88.5, 5626.0], [88.6, 5626.0], [88.7, 5626.0], [88.8, 5712.0], [88.9, 5712.0], [89.0, 5712.0], [89.1, 5712.0], [89.2, 5752.0], [89.3, 5752.0], [89.4, 5752.0], [89.5, 5752.0], [89.6, 5758.0], [89.7, 5758.0], [89.8, 5758.0], [89.9, 5758.0], [90.0, 5758.0], [90.1, 5758.0], [90.2, 5758.0], [90.3, 5758.0], [90.4, 5758.0], [90.5, 5758.0], [90.6, 5758.0], [90.7, 5758.0], [90.8, 5758.0], [90.9, 5811.0], [91.0, 5811.0], [91.1, 5811.0], [91.2, 5811.0], [91.3, 5812.0], [91.4, 5812.0], [91.5, 5812.0], [91.6, 5812.0], [91.7, 5814.0], [91.8, 5814.0], [91.9, 5814.0], [92.0, 5814.0], [92.1, 5826.0], [92.2, 5826.0], [92.3, 5826.0], [92.4, 5826.0], [92.5, 5826.0], [92.6, 5930.0], [92.7, 5930.0], [92.8, 5930.0], [92.9, 5930.0], [93.0, 5935.0], [93.1, 5935.0], [93.2, 5935.0], [93.3, 5935.0], [93.4, 6252.0], [93.5, 6252.0], [93.6, 6252.0], [93.7, 6252.0], [93.8, 6352.0], [93.9, 6352.0], [94.0, 6352.0], [94.1, 6352.0], [94.2, 6353.0], [94.3, 6353.0], [94.4, 6353.0], [94.5, 6353.0], [94.6, 6411.0], [94.7, 6411.0], [94.8, 6411.0], [94.9, 6411.0], [95.0, 6411.0], [95.1, 6480.0], [95.2, 6480.0], [95.3, 6480.0], [95.4, 6480.0], [95.5, 6941.0], [95.6, 6941.0], [95.7, 6941.0], [95.8, 6941.0], [95.9, 7140.0], [96.0, 7140.0], [96.1, 7140.0], [96.2, 7140.0], [96.3, 7146.0], [96.4, 7146.0], [96.5, 7146.0], [96.6, 7146.0], [96.7, 7173.0], [96.8, 7173.0], [96.9, 7173.0], [97.0, 7173.0], [97.1, 7173.0], [97.2, 7173.0], [97.3, 7173.0], [97.4, 7173.0], [97.5, 7173.0], [97.6, 7173.0], [97.7, 7173.0], [97.8, 7173.0], [97.9, 7173.0], [98.0, 7182.0], [98.1, 7182.0], [98.2, 7182.0], [98.3, 7182.0], [98.4, 7182.0], [98.5, 7182.0], [98.6, 7182.0], [98.7, 7182.0], [98.8, 7313.0], [98.9, 7313.0], [99.0, 7313.0], [99.1, 7313.0], [99.2, 7351.0], [99.3, 7351.0], [99.4, 7351.0], [99.5, 7351.0], [99.6, 7464.0], [99.7, 7464.0], [99.8, 7464.0], [99.9, 7464.0], [100.0, 7464.0]], "isOverall": false, "label": "HTTP Request 2", "isController": false}, {"data": [[0.0, 1312.0], [0.1, 1312.0], [0.2, 1312.0], [0.3, 1312.0], [0.4, 1312.0], [0.5, 1326.0], [0.6, 1326.0], [0.7, 1326.0], [0.8, 1326.0], [0.9, 1329.0], [1.0, 1329.0], [1.1, 1329.0], [1.2, 1329.0], [1.3, 1330.0], [1.4, 1330.0], [1.5, 1330.0], [1.6, 1330.0], [1.7, 1330.0], [1.8, 1330.0], [1.9, 1330.0], [2.0, 1330.0], [2.1, 1331.0], [2.2, 1331.0], [2.3, 1331.0], [2.4, 1331.0], [2.5, 1331.0], [2.6, 1331.0], [2.7, 1331.0], [2.8, 1331.0], [2.9, 1331.0], [3.0, 1332.0], [3.1, 1332.0], [3.2, 1332.0], [3.3, 1332.0], [3.4, 1337.0], [3.5, 1337.0], [3.6, 1337.0], [3.7, 1337.0], [3.8, 1337.0], [3.9, 1337.0], [4.0, 1337.0], [4.1, 1337.0], [4.2, 1340.0], [4.3, 1340.0], [4.4, 1340.0], [4.5, 1340.0], [4.6, 1343.0], [4.7, 1343.0], [4.8, 1343.0], [4.9, 1343.0], [5.0, 1343.0], [5.1, 1348.0], [5.2, 1348.0], [5.3, 1348.0], [5.4, 1348.0], [5.5, 1351.0], [5.6, 1351.0], [5.7, 1351.0], [5.8, 1351.0], [5.9, 1355.0], [6.0, 1355.0], [6.1, 1355.0], [6.2, 1355.0], [6.3, 1356.0], [6.4, 1356.0], [6.5, 1356.0], [6.6, 1356.0], [6.7, 1358.0], [6.8, 1358.0], [6.9, 1358.0], [7.0, 1358.0], [7.1, 1360.0], [7.2, 1360.0], [7.3, 1360.0], [7.4, 1360.0], [7.5, 1360.0], [7.6, 1360.0], [7.7, 1360.0], [7.8, 1360.0], [7.9, 1360.0], [8.0, 1361.0], [8.1, 1361.0], [8.2, 1361.0], [8.3, 1361.0], [8.4, 1362.0], [8.5, 1362.0], [8.6, 1362.0], [8.7, 1362.0], [8.8, 1363.0], [8.9, 1363.0], [9.0, 1363.0], [9.1, 1363.0], [9.2, 1372.0], [9.3, 1372.0], [9.4, 1372.0], [9.5, 1372.0], [9.6, 1374.0], [9.7, 1374.0], [9.8, 1374.0], [9.9, 1374.0], [10.0, 1376.0], [10.1, 1376.0], [10.2, 1376.0], [10.3, 1376.0], [10.4, 1376.0], [10.5, 1405.0], [10.6, 1405.0], [10.7, 1405.0], [10.8, 1405.0], [10.9, 1408.0], [11.0, 1408.0], [11.1, 1408.0], [11.2, 1408.0], [11.3, 1410.0], [11.4, 1410.0], [11.5, 1410.0], [11.6, 1410.0], [11.7, 1413.0], [11.8, 1413.0], [11.9, 1413.0], [12.0, 1413.0], [12.1, 1413.0], [12.2, 1413.0], [12.3, 1413.0], [12.4, 1413.0], [12.5, 1413.0], [12.6, 1413.0], [12.7, 1413.0], [12.8, 1413.0], [12.9, 1413.0], [13.0, 1413.0], [13.1, 1413.0], [13.2, 1413.0], [13.3, 1413.0], [13.4, 1414.0], [13.5, 1414.0], [13.6, 1414.0], [13.7, 1414.0], [13.8, 1419.0], [13.9, 1419.0], [14.0, 1419.0], [14.1, 1419.0], [14.2, 1422.0], [14.3, 1422.0], [14.4, 1422.0], [14.5, 1422.0], [14.6, 1423.0], [14.7, 1423.0], [14.8, 1423.0], [14.9, 1423.0], [15.0, 1429.0], [15.1, 1429.0], [15.2, 1429.0], [15.3, 1429.0], [15.4, 1429.0], [15.5, 1441.0], [15.6, 1441.0], [15.7, 1441.0], [15.8, 1441.0], [15.9, 1452.0], [16.0, 1452.0], [16.1, 1452.0], [16.2, 1452.0], [16.3, 1466.0], [16.4, 1466.0], [16.5, 1466.0], [16.6, 1466.0], [16.7, 1470.0], [16.8, 1470.0], [16.9, 1470.0], [17.0, 1470.0], [17.1, 1480.0], [17.2, 1480.0], [17.3, 1480.0], [17.4, 1480.0], [17.5, 1490.0], [17.6, 1490.0], [17.7, 1490.0], [17.8, 1490.0], [17.9, 1490.0], [18.0, 1496.0], [18.1, 1496.0], [18.2, 1496.0], [18.3, 1496.0], [18.4, 1496.0], [18.5, 1496.0], [18.6, 1496.0], [18.7, 1496.0], [18.8, 1512.0], [18.9, 1512.0], [19.0, 1512.0], [19.1, 1512.0], [19.2, 1520.0], [19.3, 1520.0], [19.4, 1520.0], [19.5, 1520.0], [19.6, 1527.0], [19.7, 1527.0], [19.8, 1527.0], [19.9, 1527.0], [20.0, 1533.0], [20.1, 1533.0], [20.2, 1533.0], [20.3, 1533.0], [20.4, 1533.0], [20.5, 1548.0], [20.6, 1548.0], [20.7, 1548.0], [20.8, 1548.0], [20.9, 1558.0], [21.0, 1558.0], [21.1, 1558.0], [21.2, 1558.0], [21.3, 1565.0], [21.4, 1565.0], [21.5, 1565.0], [21.6, 1565.0], [21.7, 1573.0], [21.8, 1573.0], [21.9, 1573.0], [22.0, 1573.0], [22.1, 1579.0], [22.2, 1579.0], [22.3, 1579.0], [22.4, 1579.0], [22.5, 1579.0], [22.6, 1584.0], [22.7, 1584.0], [22.8, 1584.0], [22.9, 1584.0], [23.0, 1585.0], [23.1, 1585.0], [23.2, 1585.0], [23.3, 1585.0], [23.4, 1587.0], [23.5, 1587.0], [23.6, 1587.0], [23.7, 1587.0], [23.8, 1598.0], [23.9, 1598.0], [24.0, 1598.0], [24.1, 1598.0], [24.2, 1601.0], [24.3, 1601.0], [24.4, 1601.0], [24.5, 1601.0], [24.6, 1604.0], [24.7, 1604.0], [24.8, 1604.0], [24.9, 1604.0], [25.0, 1604.0], [25.1, 1632.0], [25.2, 1632.0], [25.3, 1632.0], [25.4, 1632.0], [25.5, 1642.0], [25.6, 1642.0], [25.7, 1642.0], [25.8, 1642.0], [25.9, 1645.0], [26.0, 1645.0], [26.1, 1645.0], [26.2, 1645.0], [26.3, 1652.0], [26.4, 1652.0], [26.5, 1652.0], [26.6, 1652.0], [26.7, 1683.0], [26.8, 1683.0], [26.9, 1683.0], [27.0, 1683.0], [27.1, 1684.0], [27.2, 1684.0], [27.3, 1684.0], [27.4, 1684.0], [27.5, 1684.0], [27.6, 1688.0], [27.7, 1688.0], [27.8, 1688.0], [27.9, 1688.0], [28.0, 1689.0], [28.1, 1689.0], [28.2, 1689.0], [28.3, 1689.0], [28.4, 1699.0], [28.5, 1699.0], [28.6, 1699.0], [28.7, 1699.0], [28.8, 1701.0], [28.9, 1701.0], [29.0, 1701.0], [29.1, 1701.0], [29.2, 1714.0], [29.3, 1714.0], [29.4, 1714.0], [29.5, 1714.0], [29.6, 1728.0], [29.7, 1728.0], [29.8, 1728.0], [29.9, 1728.0], [30.0, 1728.0], [30.1, 1738.0], [30.2, 1738.0], [30.3, 1738.0], [30.4, 1738.0], [30.5, 1771.0], [30.6, 1771.0], [30.7, 1771.0], [30.8, 1771.0], [30.9, 1788.0], [31.0, 1788.0], [31.1, 1788.0], [31.2, 1788.0], [31.3, 1794.0], [31.4, 1794.0], [31.5, 1794.0], [31.6, 1794.0], [31.7, 1825.0], [31.8, 1825.0], [31.9, 1825.0], [32.0, 1825.0], [32.1, 1830.0], [32.2, 1830.0], [32.3, 1830.0], [32.4, 1830.0], [32.5, 1830.0], [32.6, 1931.0], [32.7, 1931.0], [32.8, 1931.0], [32.9, 1931.0], [33.0, 1945.0], [33.1, 1945.0], [33.2, 1945.0], [33.3, 1945.0], [33.4, 2082.0], [33.5, 2082.0], [33.6, 2082.0], [33.7, 2082.0], [33.8, 2096.0], [33.9, 2096.0], [34.0, 2096.0], [34.1, 2096.0], [34.2, 2193.0], [34.3, 2193.0], [34.4, 2193.0], [34.5, 2193.0], [34.6, 2447.0], [34.7, 2447.0], [34.8, 2447.0], [34.9, 2447.0], [35.0, 2447.0], [35.1, 2558.0], [35.2, 2558.0], [35.3, 2558.0], [35.4, 2558.0], [35.5, 2572.0], [35.6, 2572.0], [35.7, 2572.0], [35.8, 2572.0], [35.9, 2614.0], [36.0, 2614.0], [36.1, 2614.0], [36.2, 2614.0], [36.3, 2721.0], [36.4, 2721.0], [36.5, 2721.0], [36.6, 2721.0], [36.7, 2735.0], [36.8, 2735.0], [36.9, 2735.0], [37.0, 2735.0], [37.1, 2743.0], [37.2, 2743.0], [37.3, 2743.0], [37.4, 2743.0], [37.5, 2743.0], [37.6, 2743.0], [37.7, 2743.0], [37.8, 2743.0], [37.9, 2743.0], [38.0, 2793.0], [38.1, 2793.0], [38.2, 2793.0], [38.3, 2793.0], [38.4, 2794.0], [38.5, 2794.0], [38.6, 2794.0], [38.7, 2794.0], [38.8, 2841.0], [38.9, 2841.0], [39.0, 2841.0], [39.1, 2841.0], [39.2, 2892.0], [39.3, 2892.0], [39.4, 2892.0], [39.5, 2892.0], [39.6, 3004.0], [39.7, 3004.0], [39.8, 3004.0], [39.9, 3004.0], [40.0, 3060.0], [40.1, 3060.0], [40.2, 3060.0], [40.3, 3060.0], [40.4, 3060.0], [40.5, 3060.0], [40.6, 3060.0], [40.7, 3060.0], [40.8, 3060.0], [40.9, 3061.0], [41.0, 3061.0], [41.1, 3061.0], [41.2, 3061.0], [41.3, 3158.0], [41.4, 3158.0], [41.5, 3158.0], [41.6, 3158.0], [41.7, 3160.0], [41.8, 3160.0], [41.9, 3160.0], [42.0, 3160.0], [42.1, 3175.0], [42.2, 3175.0], [42.3, 3175.0], [42.4, 3175.0], [42.5, 3222.0], [42.6, 3222.0], [42.7, 3222.0], [42.8, 3222.0], [42.9, 3222.0], [43.0, 3222.0], [43.1, 3222.0], [43.2, 3222.0], [43.3, 3222.0], [43.4, 3373.0], [43.5, 3373.0], [43.6, 3373.0], [43.7, 3373.0], [43.8, 3463.0], [43.9, 3463.0], [44.0, 3463.0], [44.1, 3463.0], [44.2, 3467.0], [44.3, 3467.0], [44.4, 3467.0], [44.5, 3467.0], [44.6, 3486.0], [44.7, 3486.0], [44.8, 3486.0], [44.9, 3486.0], [45.0, 3487.0], [45.1, 3487.0], [45.2, 3487.0], [45.3, 3487.0], [45.4, 3487.0], [45.5, 3488.0], [45.6, 3488.0], [45.7, 3488.0], [45.8, 3488.0], [45.9, 3488.0], [46.0, 3488.0], [46.1, 3488.0], [46.2, 3488.0], [46.3, 3611.0], [46.4, 3611.0], [46.5, 3611.0], [46.6, 3611.0], [46.7, 3674.0], [46.8, 3674.0], [46.9, 3674.0], [47.0, 3674.0], [47.1, 3683.0], [47.2, 3683.0], [47.3, 3683.0], [47.4, 3683.0], [47.5, 3689.0], [47.6, 3689.0], [47.7, 3689.0], [47.8, 3689.0], [47.9, 3689.0], [48.0, 3752.0], [48.1, 3752.0], [48.2, 3752.0], [48.3, 3752.0], [48.4, 3765.0], [48.5, 3765.0], [48.6, 3765.0], [48.7, 3765.0], [48.8, 3769.0], [48.9, 3769.0], [49.0, 3769.0], [49.1, 3769.0], [49.2, 3778.0], [49.3, 3778.0], [49.4, 3778.0], [49.5, 3778.0], [49.6, 3778.0], [49.7, 3778.0], [49.8, 3778.0], [49.9, 3778.0], [50.0, 3781.0], [50.1, 3781.0], [50.2, 3781.0], [50.3, 3781.0], [50.4, 3781.0], [50.5, 3796.0], [50.6, 3796.0], [50.7, 3796.0], [50.8, 3796.0], [50.9, 3797.0], [51.0, 3797.0], [51.1, 3797.0], [51.2, 3797.0], [51.3, 3798.0], [51.4, 3798.0], [51.5, 3798.0], [51.6, 3798.0], [51.7, 3850.0], [51.8, 3850.0], [51.9, 3850.0], [52.0, 3850.0], [52.1, 3850.0], [52.2, 3850.0], [52.3, 3850.0], [52.4, 3850.0], [52.5, 3850.0], [52.6, 3850.0], [52.7, 3850.0], [52.8, 3850.0], [52.9, 3850.0], [53.0, 3850.0], [53.1, 3850.0], [53.2, 3850.0], [53.3, 3850.0], [53.4, 3851.0], [53.5, 3851.0], [53.6, 3851.0], [53.7, 3851.0], [53.8, 3878.0], [53.9, 3878.0], [54.0, 3878.0], [54.1, 3878.0], [54.2, 3909.0], [54.3, 3909.0], [54.4, 3909.0], [54.5, 3909.0], [54.6, 3909.0], [54.7, 3909.0], [54.8, 3909.0], [54.9, 3909.0], [55.0, 4024.0], [55.1, 4024.0], [55.2, 4024.0], [55.3, 4024.0], [55.4, 4024.0], [55.5, 4030.0], [55.6, 4030.0], [55.7, 4030.0], [55.8, 4030.0], [55.9, 4030.0], [56.0, 4030.0], [56.1, 4030.0], [56.2, 4030.0], [56.3, 4167.0], [56.4, 4167.0], [56.5, 4167.0], [56.6, 4167.0], [56.7, 4167.0], [56.8, 4167.0], [56.9, 4167.0], [57.0, 4167.0], [57.1, 4170.0], [57.2, 4170.0], [57.3, 4170.0], [57.4, 4170.0], [57.5, 4170.0], [57.6, 4170.0], [57.7, 4170.0], [57.8, 4170.0], [57.9, 4170.0], [58.0, 4254.0], [58.1, 4254.0], [58.2, 4254.0], [58.3, 4254.0], [58.4, 4274.0], [58.5, 4274.0], [58.6, 4274.0], [58.7, 4274.0], [58.8, 4274.0], [58.9, 4274.0], [59.0, 4274.0], [59.1, 4274.0], [59.2, 4348.0], [59.3, 4348.0], [59.4, 4348.0], [59.5, 4348.0], [59.6, 4464.0], [59.7, 4464.0], [59.8, 4464.0], [59.9, 4464.0], [60.0, 4465.0], [60.1, 4465.0], [60.2, 4465.0], [60.3, 4465.0], [60.4, 4465.0], [60.5, 4523.0], [60.6, 4523.0], [60.7, 4523.0], [60.8, 4523.0], [60.9, 4526.0], [61.0, 4526.0], [61.1, 4526.0], [61.2, 4526.0], [61.3, 4540.0], [61.4, 4540.0], [61.5, 4540.0], [61.6, 4540.0], [61.7, 4542.0], [61.8, 4542.0], [61.9, 4542.0], [62.0, 4542.0], [62.1, 4560.0], [62.2, 4560.0], [62.3, 4560.0], [62.4, 4560.0], [62.5, 4592.0], [62.6, 4592.0], [62.7, 4592.0], [62.8, 4592.0], [62.9, 4592.0], [63.0, 4604.0], [63.1, 4604.0], [63.2, 4604.0], [63.3, 4604.0], [63.4, 4821.0], [63.5, 4821.0], [63.6, 4821.0], [63.7, 4821.0], [63.8, 4837.0], [63.9, 4837.0], [64.0, 4837.0], [64.1, 4837.0], [64.2, 4890.0], [64.3, 4890.0], [64.4, 4890.0], [64.5, 4890.0], [64.6, 4921.0], [64.7, 4921.0], [64.8, 4921.0], [64.9, 4921.0], [65.0, 4921.0], [65.1, 4921.0], [65.2, 4921.0], [65.3, 4921.0], [65.4, 4921.0], [65.5, 4943.0], [65.6, 4943.0], [65.7, 4943.0], [65.8, 4943.0], [65.9, 4961.0], [66.0, 4961.0], [66.1, 4961.0], [66.2, 4961.0], [66.3, 4980.0], [66.4, 4980.0], [66.5, 4980.0], [66.6, 4980.0], [66.7, 4981.0], [66.8, 4981.0], [66.9, 4981.0], [67.0, 4981.0], [67.1, 5041.0], [67.2, 5041.0], [67.3, 5041.0], [67.4, 5041.0], [67.5, 5044.0], [67.6, 5044.0], [67.7, 5044.0], [67.8, 5044.0], [67.9, 5044.0], [68.0, 5044.0], [68.1, 5044.0], [68.2, 5044.0], [68.3, 5044.0], [68.4, 5068.0], [68.5, 5068.0], [68.6, 5068.0], [68.7, 5068.0], [68.8, 5083.0], [68.9, 5083.0], [69.0, 5083.0], [69.1, 5083.0], [69.2, 5089.0], [69.3, 5089.0], [69.4, 5089.0], [69.5, 5089.0], [69.6, 5089.0], [69.7, 5089.0], [69.8, 5089.0], [69.9, 5089.0], [70.0, 5155.0], [70.1, 5155.0], [70.2, 5155.0], [70.3, 5155.0], [70.4, 5155.0], [70.5, 5156.0], [70.6, 5156.0], [70.7, 5156.0], [70.8, 5156.0], [70.9, 5157.0], [71.0, 5157.0], [71.1, 5157.0], [71.2, 5157.0], [71.3, 5158.0], [71.4, 5158.0], [71.5, 5158.0], [71.6, 5158.0], [71.7, 5183.0], [71.8, 5183.0], [71.9, 5183.0], [72.0, 5183.0], [72.1, 5209.0], [72.2, 5209.0], [72.3, 5209.0], [72.4, 5209.0], [72.5, 5257.0], [72.6, 5257.0], [72.7, 5257.0], [72.8, 5257.0], [72.9, 5257.0], [73.0, 5348.0], [73.1, 5348.0], [73.2, 5348.0], [73.3, 5348.0], [73.4, 5352.0], [73.5, 5352.0], [73.6, 5352.0], [73.7, 5352.0], [73.8, 5353.0], [73.9, 5353.0], [74.0, 5353.0], [74.1, 5353.0], [74.2, 5354.0], [74.3, 5354.0], [74.4, 5354.0], [74.5, 5354.0], [74.6, 5354.0], [74.7, 5354.0], [74.8, 5354.0], [74.9, 5354.0], [75.0, 5378.0], [75.1, 5378.0], [75.2, 5378.0], [75.3, 5378.0], [75.4, 5378.0], [75.5, 5380.0], [75.6, 5380.0], [75.7, 5380.0], [75.8, 5380.0], [75.9, 5381.0], [76.0, 5381.0], [76.1, 5381.0], [76.2, 5381.0], [76.3, 5397.0], [76.4, 5397.0], [76.5, 5397.0], [76.6, 5397.0], [76.7, 5401.0], [76.8, 5401.0], [76.9, 5401.0], [77.0, 5401.0], [77.1, 5424.0], [77.2, 5424.0], [77.3, 5424.0], [77.4, 5424.0], [77.5, 5424.0], [77.6, 5425.0], [77.7, 5425.0], [77.8, 5425.0], [77.9, 5425.0], [78.0, 5426.0], [78.1, 5426.0], [78.2, 5426.0], [78.3, 5426.0], [78.4, 5426.0], [78.5, 5426.0], [78.6, 5426.0], [78.7, 5426.0], [78.8, 5426.0], [78.9, 5426.0], [79.0, 5426.0], [79.1, 5426.0], [79.2, 5428.0], [79.3, 5428.0], [79.4, 5428.0], [79.5, 5428.0], [79.6, 5429.0], [79.7, 5429.0], [79.8, 5429.0], [79.9, 5429.0], [80.0, 5429.0], [80.1, 5429.0], [80.2, 5429.0], [80.3, 5429.0], [80.4, 5429.0], [80.5, 5445.0], [80.6, 5445.0], [80.7, 5445.0], [80.8, 5445.0], [80.9, 5461.0], [81.0, 5461.0], [81.1, 5461.0], [81.2, 5461.0], [81.3, 5463.0], [81.4, 5463.0], [81.5, 5463.0], [81.6, 5463.0], [81.7, 5463.0], [81.8, 5463.0], [81.9, 5463.0], [82.0, 5463.0], [82.1, 5464.0], [82.2, 5464.0], [82.3, 5464.0], [82.4, 5464.0], [82.5, 5464.0], [82.6, 5464.0], [82.7, 5464.0], [82.8, 5464.0], [82.9, 5464.0], [83.0, 5491.0], [83.1, 5491.0], [83.2, 5491.0], [83.3, 5491.0], [83.4, 5493.0], [83.5, 5493.0], [83.6, 5493.0], [83.7, 5493.0], [83.8, 5510.0], [83.9, 5510.0], [84.0, 5510.0], [84.1, 5510.0], [84.2, 5543.0], [84.3, 5543.0], [84.4, 5543.0], [84.5, 5543.0], [84.6, 5543.0], [84.7, 5543.0], [84.8, 5543.0], [84.9, 5543.0], [85.0, 5543.0], [85.1, 5551.0], [85.2, 5551.0], [85.3, 5551.0], [85.4, 5551.0], [85.5, 5551.0], [85.6, 5551.0], [85.7, 5551.0], [85.8, 5551.0], [85.9, 5575.0], [86.0, 5575.0], [86.1, 5575.0], [86.2, 5575.0], [86.3, 5577.0], [86.4, 5577.0], [86.5, 5577.0], [86.6, 5577.0], [86.7, 5581.0], [86.8, 5581.0], [86.9, 5581.0], [87.0, 5581.0], [87.1, 5599.0], [87.2, 5599.0], [87.3, 5599.0], [87.4, 5599.0], [87.5, 5599.0], [87.6, 5604.0], [87.7, 5604.0], [87.8, 5604.0], [87.9, 5604.0], [88.0, 5620.0], [88.1, 5620.0], [88.2, 5620.0], [88.3, 5620.0], [88.4, 5627.0], [88.5, 5627.0], [88.6, 5627.0], [88.7, 5627.0], [88.8, 5629.0], [88.9, 5629.0], [89.0, 5629.0], [89.1, 5629.0], [89.2, 5634.0], [89.3, 5634.0], [89.4, 5634.0], [89.5, 5634.0], [89.6, 5812.0], [89.7, 5812.0], [89.8, 5812.0], [89.9, 5812.0], [90.0, 5812.0], [90.1, 6036.0], [90.2, 6036.0], [90.3, 6036.0], [90.4, 6036.0], [90.5, 6037.0], [90.6, 6037.0], [90.7, 6037.0], [90.8, 6037.0], [90.9, 6039.0], [91.0, 6039.0], [91.1, 6039.0], [91.2, 6039.0], [91.3, 6632.0], [91.4, 6632.0], [91.5, 6632.0], [91.6, 6632.0], [91.7, 6632.0], [91.8, 6632.0], [91.9, 6632.0], [92.0, 6632.0], [92.1, 6699.0], [92.2, 6699.0], [92.3, 6699.0], [92.4, 6699.0], [92.5, 6699.0], [92.6, 7142.0], [92.7, 7142.0], [92.8, 7142.0], [92.9, 7142.0], [93.0, 7203.0], [93.1, 7203.0], [93.2, 7203.0], [93.3, 7203.0], [93.4, 7288.0], [93.5, 7288.0], [93.6, 7288.0], [93.7, 7288.0], [93.8, 7289.0], [93.9, 7289.0], [94.0, 7289.0], [94.1, 7289.0], [94.2, 7290.0], [94.3, 7290.0], [94.4, 7290.0], [94.5, 7290.0], [94.6, 7290.0], [94.7, 7290.0], [94.8, 7290.0], [94.9, 7290.0], [95.0, 7290.0], [95.1, 7290.0], [95.2, 7290.0], [95.3, 7290.0], [95.4, 7290.0], [95.5, 7324.0], [95.6, 7324.0], [95.7, 7324.0], [95.8, 7324.0], [95.9, 7385.0], [96.0, 7385.0], [96.1, 7385.0], [96.2, 7385.0], [96.3, 7386.0], [96.4, 7386.0], [96.5, 7386.0], [96.6, 7386.0], [96.7, 7386.0], [96.8, 7386.0], [96.9, 7386.0], [97.0, 7386.0], [97.1, 7436.0], [97.2, 7436.0], [97.3, 7436.0], [97.4, 7436.0], [97.5, 7436.0], [97.6, 7437.0], [97.7, 7437.0], [97.8, 7437.0], [97.9, 7437.0], [98.0, 7462.0], [98.1, 7462.0], [98.2, 7462.0], [98.3, 7462.0], [98.4, 7469.0], [98.5, 7469.0], [98.6, 7469.0], [98.7, 7469.0], [98.8, 7510.0], [98.9, 7510.0], [99.0, 7510.0], [99.1, 7510.0], [99.2, 7752.0], [99.3, 7752.0], [99.4, 7752.0], [99.5, 7752.0], [99.6, 7792.0], [99.7, 7792.0], [99.8, 7792.0], [99.9, 7792.0], [100.0, 7792.0]], "isOverall": false, "label": "HTTP Request 1", "isController": false}, {"data": [[0.0, 514.0], [0.1, 525.0], [0.2, 528.0], [0.3, 529.0], [0.4, 531.0], [0.5, 532.0], [0.6, 534.0], [0.7, 535.0], [0.8, 535.0], [0.9, 537.0], [1.0, 540.0], [1.1, 541.0], [1.2, 546.0], [1.3, 546.0], [1.4, 550.0], [1.5, 555.0], [1.6, 557.0], [1.7, 558.0], [1.8, 559.0], [1.9, 559.0], [2.0, 562.0], [2.1, 563.0], [2.2, 565.0], [2.3, 566.0], [2.4, 570.0], [2.5, 573.0], [2.6, 575.0], [2.7, 576.0], [2.8, 578.0], [2.9, 582.0], [3.0, 583.0], [3.1, 585.0], [3.2, 587.0], [3.3, 589.0], [3.4, 592.0], [3.5, 596.0], [3.6, 598.0], [3.7, 601.0], [3.8, 602.0], [3.9, 604.0], [4.0, 607.0], [4.1, 610.0], [4.2, 612.0], [4.3, 616.0], [4.4, 620.0], [4.5, 622.0], [4.6, 625.0], [4.7, 627.0], [4.8, 630.0], [4.9, 631.0], [5.0, 635.0], [5.1, 638.0], [5.2, 641.0], [5.3, 645.0], [5.4, 645.0], [5.5, 646.0], [5.6, 649.0], [5.7, 649.0], [5.8, 651.0], [5.9, 652.0], [6.0, 656.0], [6.1, 660.0], [6.2, 663.0], [6.3, 664.0], [6.4, 666.0], [6.5, 667.0], [6.6, 670.0], [6.7, 672.0], [6.8, 674.0], [6.9, 677.0], [7.0, 681.0], [7.1, 684.0], [7.2, 686.0], [7.3, 687.0], [7.4, 689.0], [7.5, 692.0], [7.6, 698.0], [7.7, 703.0], [7.8, 707.0], [7.9, 709.0], [8.0, 709.0], [8.1, 710.0], [8.2, 713.0], [8.3, 715.0], [8.4, 717.0], [8.5, 721.0], [8.6, 724.0], [8.7, 727.0], [8.8, 728.0], [8.9, 730.0], [9.0, 732.0], [9.1, 737.0], [9.2, 739.0], [9.3, 740.0], [9.4, 746.0], [9.5, 746.0], [9.6, 750.0], [9.7, 751.0], [9.8, 752.0], [9.9, 755.0], [10.0, 758.0], [10.1, 761.0], [10.2, 763.0], [10.3, 764.0], [10.4, 770.0], [10.5, 770.0], [10.6, 771.0], [10.7, 774.0], [10.8, 775.0], [10.9, 778.0], [11.0, 779.0], [11.1, 785.0], [11.2, 788.0], [11.3, 794.0], [11.4, 796.0], [11.5, 799.0], [11.6, 805.0], [11.7, 806.0], [11.8, 808.0], [11.9, 811.0], [12.0, 812.0], [12.1, 813.0], [12.2, 815.0], [12.3, 818.0], [12.4, 818.0], [12.5, 821.0], [12.6, 824.0], [12.7, 825.0], [12.8, 826.0], [12.9, 827.0], [13.0, 829.0], [13.1, 833.0], [13.2, 837.0], [13.3, 840.0], [13.4, 841.0], [13.5, 844.0], [13.6, 847.0], [13.7, 848.0], [13.8, 850.0], [13.9, 851.0], [14.0, 853.0], [14.1, 856.0], [14.2, 859.0], [14.3, 859.0], [14.4, 860.0], [14.5, 862.0], [14.6, 869.0], [14.7, 870.0], [14.8, 873.0], [14.9, 876.0], [15.0, 883.0], [15.1, 892.0], [15.2, 892.0], [15.3, 895.0], [15.4, 896.0], [15.5, 898.0], [15.6, 900.0], [15.7, 902.0], [15.8, 906.0], [15.9, 909.0], [16.0, 910.0], [16.1, 912.0], [16.2, 914.0], [16.3, 914.0], [16.4, 916.0], [16.5, 917.0], [16.6, 922.0], [16.7, 926.0], [16.8, 928.0], [16.9, 940.0], [17.0, 947.0], [17.1, 949.0], [17.2, 954.0], [17.3, 956.0], [17.4, 965.0], [17.5, 965.0], [17.6, 967.0], [17.7, 973.0], [17.8, 982.0], [17.9, 993.0], [18.0, 995.0], [18.1, 1010.0], [18.2, 1011.0], [18.3, 1016.0], [18.4, 1016.0], [18.5, 1018.0], [18.6, 1026.0], [18.7, 1031.0], [18.8, 1039.0], [18.9, 1041.0], [19.0, 1049.0], [19.1, 1070.0], [19.2, 1081.0], [19.3, 1081.0], [19.4, 1088.0], [19.5, 1114.0], [19.6, 1115.0], [19.7, 1118.0], [19.8, 1131.0], [19.9, 1147.0], [20.0, 1157.0], [20.1, 1158.0], [20.2, 1173.0], [20.3, 1180.0], [20.4, 1238.0], [20.5, 1278.0], [20.6, 1318.0], [20.7, 1331.0], [20.8, 1334.0], [20.9, 1337.0], [21.0, 1344.0], [21.1, 1348.0], [21.2, 1349.0], [21.3, 1349.0], [21.4, 1352.0], [21.5, 1364.0], [21.6, 1367.0], [21.7, 1425.0], [21.8, 1523.0], [21.9, 1619.0], [22.0, 1656.0], [22.1, 1657.0], [22.2, 1663.0], [22.3, 1664.0], [22.4, 1670.0], [22.5, 1676.0], [22.6, 1733.0], [22.7, 1765.0], [22.8, 1766.0], [22.9, 1774.0], [23.0, 1783.0], [23.1, 1789.0], [23.2, 1837.0], [23.3, 1882.0], [23.4, 1883.0], [23.5, 1892.0], [23.6, 1907.0], [23.7, 1977.0], [23.8, 1977.0], [23.9, 1978.0], [24.0, 1978.0], [24.1, 1981.0], [24.2, 1995.0], [24.3, 2009.0], [24.4, 2010.0], [24.5, 2010.0], [24.6, 2046.0], [24.7, 2047.0], [24.8, 2049.0], [24.9, 2050.0], [25.0, 2073.0], [25.1, 2088.0], [25.2, 2090.0], [25.3, 2103.0], [25.4, 2201.0], [25.5, 2235.0], [25.6, 2254.0], [25.7, 2258.0], [25.8, 2274.0], [25.9, 2297.0], [26.0, 2298.0], [26.1, 2328.0], [26.2, 2335.0], [26.3, 2351.0], [26.4, 2351.0], [26.5, 2365.0], [26.6, 2365.0], [26.7, 2410.0], [26.8, 2411.0], [26.9, 2411.0], [27.0, 2412.0], [27.1, 2413.0], [27.2, 2614.0], [27.3, 2628.0], [27.4, 2628.0], [27.5, 2644.0], [27.6, 2660.0], [27.7, 2662.0], [27.8, 2675.0], [27.9, 2677.0], [28.0, 2678.0], [28.1, 2731.0], [28.2, 2732.0], [28.3, 2732.0], [28.4, 2733.0], [28.5, 2733.0], [28.6, 2735.0], [28.7, 2752.0], [28.8, 2753.0], [28.9, 2755.0], [29.0, 2759.0], [29.1, 2790.0], [29.2, 2790.0], [29.3, 2792.0], [29.4, 2885.0], [29.5, 2886.0], [29.6, 2896.0], [29.7, 2899.0], [29.8, 2938.0], [29.9, 2939.0], [30.0, 2953.0], [30.1, 2954.0], [30.2, 3037.0], [30.3, 3038.0], [30.4, 3038.0], [30.5, 3039.0], [30.6, 3039.0], [30.7, 3040.0], [30.8, 3059.0], [30.9, 3060.0], [31.0, 3060.0], [31.1, 3090.0], [31.2, 3090.0], [31.3, 3090.0], [31.4, 3091.0], [31.5, 3091.0], [31.6, 3092.0], [31.7, 3092.0], [31.8, 3092.0], [31.9, 3120.0], [32.0, 3120.0], [32.1, 3155.0], [32.2, 3156.0], [32.3, 3156.0], [32.4, 3157.0], [32.5, 3157.0], [32.6, 3158.0], [32.7, 3158.0], [32.8, 3161.0], [32.9, 3175.0], [33.0, 3175.0], [33.1, 3179.0], [33.2, 3180.0], [33.3, 3185.0], [33.4, 3204.0], [33.5, 3204.0], [33.6, 3208.0], [33.7, 3209.0], [33.8, 3209.0], [33.9, 3209.0], [34.0, 3209.0], [34.1, 3210.0], [34.2, 3212.0], [34.3, 3214.0], [34.4, 3215.0], [34.5, 3216.0], [34.6, 3218.0], [34.7, 3218.0], [34.8, 3219.0], [34.9, 3232.0], [35.0, 3300.0], [35.1, 3301.0], [35.2, 3301.0], [35.3, 3301.0], [35.4, 3302.0], [35.5, 3302.0], [35.6, 3303.0], [35.7, 3320.0], [35.8, 3338.0], [35.9, 3338.0], [36.0, 3344.0], [36.1, 3345.0], [36.2, 3346.0], [36.3, 3346.0], [36.4, 3347.0], [36.5, 3347.0], [36.6, 3349.0], [36.7, 3367.0], [36.8, 3369.0], [36.9, 3371.0], [37.0, 3385.0], [37.1, 3387.0], [37.2, 3388.0], [37.3, 3388.0], [37.4, 3388.0], [37.5, 3388.0], [37.6, 3389.0], [37.7, 3389.0], [37.8, 3390.0], [37.9, 3394.0], [38.0, 3394.0], [38.1, 3397.0], [38.2, 3398.0], [38.3, 3398.0], [38.4, 3399.0], [38.5, 3399.0], [38.6, 3399.0], [38.7, 3399.0], [38.8, 3399.0], [38.9, 3399.0], [39.0, 3399.0], [39.1, 3400.0], [39.2, 3400.0], [39.3, 3400.0], [39.4, 3400.0], [39.5, 3400.0], [39.6, 3401.0], [39.7, 3401.0], [39.8, 3401.0], [39.9, 3401.0], [40.0, 3401.0], [40.1, 3413.0], [40.2, 3414.0], [40.3, 3415.0], [40.4, 3435.0], [40.5, 3437.0], [40.6, 3446.0], [40.7, 3459.0], [40.8, 3459.0], [40.9, 3460.0], [41.0, 3461.0], [41.1, 3461.0], [41.2, 3461.0], [41.3, 3462.0], [41.4, 3462.0], [41.5, 3463.0], [41.6, 3463.0], [41.7, 3465.0], [41.8, 3466.0], [41.9, 3470.0], [42.0, 3470.0], [42.1, 3471.0], [42.2, 3471.0], [42.3, 3472.0], [42.4, 3472.0], [42.5, 3473.0], [42.6, 3481.0], [42.7, 3481.0], [42.8, 3482.0], [42.9, 3485.0], [43.0, 3486.0], [43.1, 3486.0], [43.2, 3496.0], [43.3, 3496.0], [43.4, 3516.0], [43.5, 3533.0], [43.6, 3533.0], [43.7, 3533.0], [43.8, 3533.0], [43.9, 3533.0], [44.0, 3534.0], [44.1, 3534.0], [44.2, 3535.0], [44.3, 3535.0], [44.4, 3550.0], [44.5, 3565.0], [44.6, 3566.0], [44.7, 3567.0], [44.8, 3571.0], [44.9, 3579.0], [45.0, 3580.0], [45.1, 3603.0], [45.2, 3604.0], [45.3, 3605.0], [45.4, 3605.0], [45.5, 3606.0], [45.6, 3618.0], [45.7, 3619.0], [45.8, 3619.0], [45.9, 3619.0], [46.0, 3619.0], [46.1, 3619.0], [46.2, 3619.0], [46.3, 3620.0], [46.4, 3620.0], [46.5, 3620.0], [46.6, 3620.0], [46.7, 3620.0], [46.8, 3620.0], [46.9, 3620.0], [47.0, 3620.0], [47.1, 3621.0], [47.2, 3621.0], [47.3, 3621.0], [47.4, 3621.0], [47.5, 3622.0], [47.6, 3625.0], [47.7, 3628.0], [47.8, 3628.0], [47.9, 3632.0], [48.0, 3639.0], [48.1, 3639.0], [48.2, 3663.0], [48.3, 3663.0], [48.4, 3663.0], [48.5, 3664.0], [48.6, 3664.0], [48.7, 3664.0], [48.8, 3675.0], [48.9, 3679.0], [49.0, 3679.0], [49.1, 3680.0], [49.2, 3680.0], [49.3, 3681.0], [49.4, 3681.0], [49.5, 3682.0], [49.6, 3682.0], [49.7, 3682.0], [49.8, 3683.0], [49.9, 3683.0], [50.0, 3683.0], [50.1, 3684.0], [50.2, 3684.0], [50.3, 3684.0], [50.4, 3684.0], [50.5, 3685.0], [50.6, 3718.0], [50.7, 3719.0], [50.8, 3719.0], [50.9, 3721.0], [51.0, 3721.0], [51.1, 3721.0], [51.2, 3722.0], [51.3, 3722.0], [51.4, 3722.0], [51.5, 3724.0], [51.6, 3744.0], [51.7, 3745.0], [51.8, 3746.0], [51.9, 3746.0], [52.0, 3747.0], [52.1, 3747.0], [52.2, 3748.0], [52.3, 3748.0], [52.4, 3751.0], [52.5, 3760.0], [52.6, 3760.0], [52.7, 3760.0], [52.8, 3760.0], [52.9, 3760.0], [53.0, 3761.0], [53.1, 3761.0], [53.2, 3761.0], [53.3, 3761.0], [53.4, 3762.0], [53.5, 3762.0], [53.6, 3762.0], [53.7, 3762.0], [53.8, 3762.0], [53.9, 3763.0], [54.0, 3764.0], [54.1, 3764.0], [54.2, 3765.0], [54.3, 3765.0], [54.4, 3765.0], [54.5, 3765.0], [54.6, 3765.0], [54.7, 3765.0], [54.8, 3766.0], [54.9, 3768.0], [55.0, 3771.0], [55.1, 3775.0], [55.2, 3775.0], [55.3, 3775.0], [55.4, 3776.0], [55.5, 3776.0], [55.6, 3780.0], [55.7, 3784.0], [55.8, 3784.0], [55.9, 3785.0], [56.0, 3785.0], [56.1, 3785.0], [56.2, 3785.0], [56.3, 3785.0], [56.4, 3786.0], [56.5, 3786.0], [56.6, 3786.0], [56.7, 3786.0], [56.8, 3787.0], [56.9, 3787.0], [57.0, 3789.0], [57.1, 3791.0], [57.2, 3792.0], [57.3, 3792.0], [57.4, 3792.0], [57.5, 3792.0], [57.6, 3794.0], [57.7, 3795.0], [57.8, 3795.0], [57.9, 3800.0], [58.0, 3806.0], [58.1, 3806.0], [58.2, 3819.0], [58.3, 3839.0], [58.4, 3841.0], [58.5, 3841.0], [58.6, 3842.0], [58.7, 3842.0], [58.8, 3846.0], [58.9, 3847.0], [59.0, 3847.0], [59.1, 3847.0], [59.2, 3849.0], [59.3, 3870.0], [59.4, 3872.0], [59.5, 3873.0], [59.6, 3874.0], [59.7, 3874.0], [59.8, 3875.0], [59.9, 3875.0], [60.0, 3875.0], [60.1, 3876.0], [60.2, 3876.0], [60.3, 3880.0], [60.4, 3890.0], [60.5, 3901.0], [60.6, 3905.0], [60.7, 3905.0], [60.8, 3920.0], [60.9, 3927.0], [61.0, 3928.0], [61.1, 3930.0], [61.2, 3930.0], [61.3, 3931.0], [61.4, 3932.0], [61.5, 3932.0], [61.6, 3933.0], [61.7, 3988.0], [61.8, 3989.0], [61.9, 3990.0], [62.0, 3990.0], [62.1, 3991.0], [62.2, 3991.0], [62.3, 3991.0], [62.4, 3991.0], [62.5, 3992.0], [62.6, 4013.0], [62.7, 4014.0], [62.8, 4014.0], [62.9, 4015.0], [63.0, 4016.0], [63.1, 4016.0], [63.2, 4016.0], [63.3, 4017.0], [63.4, 4018.0], [63.5, 4019.0], [63.6, 4135.0], [63.7, 4153.0], [63.8, 4165.0], [63.9, 4167.0], [64.0, 4168.0], [64.1, 4183.0], [64.2, 4183.0], [64.3, 4246.0], [64.4, 4247.0], [64.5, 4248.0], [64.6, 4249.0], [64.7, 4249.0], [64.8, 4250.0], [64.9, 4251.0], [65.0, 4259.0], [65.1, 4276.0], [65.2, 4277.0], [65.3, 4413.0], [65.4, 4414.0], [65.5, 4429.0], [65.6, 4430.0], [65.7, 4430.0], [65.8, 4444.0], [65.9, 4445.0], [66.0, 4533.0], [66.1, 4536.0], [66.2, 4537.0], [66.3, 4538.0], [66.4, 4538.0], [66.5, 4539.0], [66.6, 4540.0], [66.7, 4541.0], [66.8, 4543.0], [66.9, 4544.0], [67.0, 4544.0], [67.1, 4593.0], [67.2, 4601.0], [67.3, 4602.0], [67.4, 4603.0], [67.5, 4603.0], [67.6, 4604.0], [67.7, 4605.0], [67.8, 4605.0], [67.9, 4605.0], [68.0, 4605.0], [68.1, 4606.0], [68.2, 4678.0], [68.3, 4692.0], [68.4, 4693.0], [68.5, 4707.0], [68.6, 4708.0], [68.7, 4737.0], [68.8, 4739.0], [68.9, 4831.0], [69.0, 4832.0], [69.1, 4832.0], [69.2, 4832.0], [69.3, 4833.0], [69.4, 4833.0], [69.5, 4833.0], [69.6, 4833.0], [69.7, 4833.0], [69.8, 4834.0], [69.9, 4834.0], [70.0, 4835.0], [70.1, 4849.0], [70.2, 4864.0], [70.3, 4890.0], [70.4, 4918.0], [70.5, 4919.0], [70.6, 4920.0], [70.7, 4939.0], [70.8, 4941.0], [70.9, 4941.0], [71.0, 4943.0], [71.1, 4943.0], [71.2, 4944.0], [71.3, 4944.0], [71.4, 4944.0], [71.5, 4954.0], [71.6, 4954.0], [71.7, 4954.0], [71.8, 4955.0], [71.9, 4956.0], [72.0, 4956.0], [72.1, 4957.0], [72.2, 4958.0], [72.3, 4958.0], [72.4, 4960.0], [72.5, 5036.0], [72.6, 5037.0], [72.7, 5037.0], [72.8, 5037.0], [72.9, 5038.0], [73.0, 5039.0], [73.1, 5039.0], [73.2, 5039.0], [73.3, 5040.0], [73.4, 5040.0], [73.5, 5041.0], [73.6, 5042.0], [73.7, 5084.0], [73.8, 5084.0], [73.9, 5084.0], [74.0, 5084.0], [74.1, 5085.0], [74.2, 5085.0], [74.3, 5085.0], [74.4, 5086.0], [74.5, 5086.0], [74.6, 5087.0], [74.7, 5087.0], [74.8, 5088.0], [74.9, 5089.0], [75.0, 5114.0], [75.1, 5128.0], [75.2, 5129.0], [75.3, 5129.0], [75.4, 5150.0], [75.5, 5152.0], [75.6, 5152.0], [75.7, 5152.0], [75.8, 5152.0], [75.9, 5152.0], [76.0, 5153.0], [76.1, 5153.0], [76.2, 5153.0], [76.3, 5154.0], [76.4, 5154.0], [76.5, 5154.0], [76.6, 5155.0], [76.7, 5155.0], [76.8, 5155.0], [76.9, 5155.0], [77.0, 5155.0], [77.1, 5156.0], [77.2, 5156.0], [77.3, 5157.0], [77.4, 5157.0], [77.5, 5157.0], [77.6, 5158.0], [77.7, 5180.0], [77.8, 5181.0], [77.9, 5181.0], [78.0, 5182.0], [78.1, 5183.0], [78.2, 5183.0], [78.3, 5252.0], [78.4, 5254.0], [78.5, 5255.0], [78.6, 5255.0], [78.7, 5256.0], [78.8, 5256.0], [78.9, 5256.0], [79.0, 5256.0], [79.1, 5257.0], [79.2, 5257.0], [79.3, 5258.0], [79.4, 5338.0], [79.5, 5340.0], [79.6, 5341.0], [79.7, 5342.0], [79.8, 5342.0], [79.9, 5347.0], [80.0, 5349.0], [80.1, 5350.0], [80.2, 5352.0], [80.3, 5352.0], [80.4, 5354.0], [80.5, 5354.0], [80.6, 5355.0], [80.7, 5356.0], [80.8, 5357.0], [80.9, 5374.0], [81.0, 5375.0], [81.1, 5376.0], [81.2, 5376.0], [81.3, 5377.0], [81.4, 5377.0], [81.5, 5377.0], [81.6, 5377.0], [81.7, 5378.0], [81.8, 5379.0], [81.9, 5380.0], [82.0, 5422.0], [82.1, 5422.0], [82.2, 5422.0], [82.3, 5422.0], [82.4, 5423.0], [82.5, 5423.0], [82.6, 5423.0], [82.7, 5424.0], [82.8, 5424.0], [82.9, 5424.0], [83.0, 5425.0], [83.1, 5425.0], [83.2, 5425.0], [83.3, 5425.0], [83.4, 5425.0], [83.5, 5426.0], [83.6, 5426.0], [83.7, 5426.0], [83.8, 5426.0], [83.9, 5427.0], [84.0, 5427.0], [84.1, 5427.0], [84.2, 5428.0], [84.3, 5428.0], [84.4, 5428.0], [84.5, 5429.0], [84.6, 5440.0], [84.7, 5442.0], [84.8, 5443.0], [84.9, 5443.0], [85.0, 5443.0], [85.1, 5443.0], [85.2, 5443.0], [85.3, 5443.0], [85.4, 5444.0], [85.5, 5444.0], [85.6, 5444.0], [85.7, 5445.0], [85.8, 5454.0], [85.9, 5454.0], [86.0, 5454.0], [86.1, 5454.0], [86.2, 5455.0], [86.3, 5456.0], [86.4, 5456.0], [86.5, 5461.0], [86.6, 5461.0], [86.7, 5462.0], [86.8, 5462.0], [86.9, 5462.0], [87.0, 5462.0], [87.1, 5463.0], [87.2, 5463.0], [87.3, 5463.0], [87.4, 5463.0], [87.5, 5463.0], [87.6, 5488.0], [87.7, 5489.0], [87.8, 5489.0], [87.9, 5490.0], [88.0, 5490.0], [88.1, 5491.0], [88.2, 5492.0], [88.3, 5492.0], [88.4, 5492.0], [88.5, 5494.0], [88.6, 5495.0], [88.7, 5500.0], [88.8, 5504.0], [88.9, 5504.0], [89.0, 5504.0], [89.1, 5504.0], [89.2, 5504.0], [89.3, 5504.0], [89.4, 5505.0], [89.5, 5505.0], [89.6, 5506.0], [89.7, 5507.0], [89.8, 5507.0], [89.9, 5509.0], [90.0, 5525.0], [90.1, 5539.0], [90.2, 5539.0], [90.3, 5539.0], [90.4, 5539.0], [90.5, 5539.0], [90.6, 5539.0], [90.7, 5539.0], [90.8, 5540.0], [90.9, 5540.0], [91.0, 5540.0], [91.1, 5543.0], [91.2, 5546.0], [91.3, 5547.0], [91.4, 5550.0], [91.5, 5568.0], [91.6, 5568.0], [91.7, 5568.0], [91.8, 5568.0], [91.9, 5568.0], [92.0, 5568.0], [92.1, 5570.0], [92.2, 5570.0], [92.3, 5572.0], [92.4, 5573.0], [92.5, 5573.0], [92.6, 5573.0], [92.7, 5573.0], [92.8, 5574.0], [92.9, 5574.0], [93.0, 5574.0], [93.1, 5577.0], [93.2, 5577.0], [93.3, 5577.0], [93.4, 5577.0], [93.5, 5578.0], [93.6, 5579.0], [93.7, 5580.0], [93.8, 5604.0], [93.9, 5604.0], [94.0, 5605.0], [94.1, 5606.0], [94.2, 5620.0], [94.3, 5620.0], [94.4, 5622.0], [94.5, 5624.0], [94.6, 5625.0], [94.7, 5625.0], [94.8, 5625.0], [94.9, 5626.0], [95.0, 5626.0], [95.1, 5626.0], [95.2, 5706.0], [95.3, 5708.0], [95.4, 5709.0], [95.5, 5709.0], [95.6, 5710.0], [95.7, 5711.0], [95.8, 5711.0], [95.9, 5712.0], [96.0, 5712.0], [96.1, 5713.0], [96.2, 5715.0], [96.3, 5716.0], [96.4, 5716.0], [96.5, 5716.0], [96.6, 5717.0], [96.7, 5717.0], [96.8, 5747.0], [96.9, 5754.0], [97.0, 5755.0], [97.1, 5755.0], [97.2, 5757.0], [97.3, 5758.0], [97.4, 5759.0], [97.5, 5809.0], [97.6, 5811.0], [97.7, 5811.0], [97.8, 5812.0], [97.9, 5812.0], [98.0, 5813.0], [98.1, 5813.0], [98.2, 5813.0], [98.3, 5814.0], [98.4, 5815.0], [98.5, 5815.0], [98.6, 5816.0], [98.7, 5934.0], [98.8, 5934.0], [98.9, 5934.0], [99.0, 5934.0], [99.1, 5934.0], [99.2, 5934.0], [99.3, 5934.0], [99.4, 5935.0], [99.5, 5935.0], [99.6, 5935.0], [99.7, 5935.0], [99.8, 7139.0], [99.9, 7174.0], [100.0, 7351.0]], "isOverall": false, "label": "HTTP Request 3", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 500.0, "maxY": 159.0, "series": [{"data": [[900.0, 24.0], [1000.0, 17.0], [1100.0, 12.0], [1200.0, 10.0], [1300.0, 4.0], [1400.0, 3.0], [1500.0, 2.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 3.0], [2100.0, 1.0], [2200.0, 2.0], [2300.0, 1.0], [2400.0, 3.0], [2700.0, 6.0], [3000.0, 3.0], [3100.0, 2.0], [3300.0, 8.0], [3200.0, 1.0], [3400.0, 10.0], [3600.0, 5.0], [3700.0, 15.0], [3800.0, 7.0], [3900.0, 4.0], [4000.0, 4.0], [4200.0, 3.0], [4300.0, 1.0], [4100.0, 1.0], [4400.0, 2.0], [4500.0, 5.0], [4600.0, 3.0], [4800.0, 2.0], [4700.0, 1.0], [5000.0, 5.0], [5100.0, 3.0], [4900.0, 2.0], [5300.0, 4.0], [5200.0, 3.0], [5400.0, 12.0], [5600.0, 5.0], [5500.0, 10.0], [5800.0, 4.0], [5700.0, 5.0], [5900.0, 2.0], [6300.0, 2.0], [6200.0, 1.0], [6400.0, 2.0], [6900.0, 1.0], [7100.0, 7.0], [7300.0, 2.0], [7400.0, 1.0]], "isOverall": false, "label": "HTTP Request 2", "isController": false}, {"data": [[1300.0, 25.0], [1400.0, 20.0], [1500.0, 13.0], [1600.0, 11.0], [1700.0, 7.0], [1800.0, 2.0], [1900.0, 2.0], [2000.0, 2.0], [2100.0, 1.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 6.0], [2800.0, 2.0], [3000.0, 4.0], [3100.0, 3.0], [3200.0, 2.0], [3300.0, 1.0], [3400.0, 6.0], [3600.0, 4.0], [3700.0, 9.0], [3800.0, 6.0], [3900.0, 2.0], [4000.0, 3.0], [4200.0, 3.0], [4300.0, 1.0], [4100.0, 4.0], [4400.0, 2.0], [4500.0, 6.0], [4600.0, 1.0], [4800.0, 3.0], [5000.0, 7.0], [5100.0, 5.0], [4900.0, 6.0], [5200.0, 2.0], [5300.0, 9.0], [5400.0, 17.0], [5600.0, 5.0], [5500.0, 9.0], [5800.0, 1.0], [6000.0, 3.0], [6600.0, 3.0], [7100.0, 1.0], [7300.0, 4.0], [7200.0, 6.0], [7400.0, 4.0], [7500.0, 1.0], [7700.0, 2.0]], "isOverall": false, "label": "HTTP Request 1", "isController": false}, {"data": [[600.0, 88.0], [700.0, 86.0], [800.0, 89.0], [900.0, 53.0], [1000.0, 32.0], [1100.0, 19.0], [1200.0, 5.0], [1300.0, 25.0], [1400.0, 1.0], [1500.0, 2.0], [1600.0, 16.0], [1700.0, 13.0], [1800.0, 10.0], [1900.0, 15.0], [2000.0, 21.0], [2100.0, 3.0], [2200.0, 15.0], [2300.0, 14.0], [2400.0, 10.0], [2600.0, 19.0], [2700.0, 29.0], [2800.0, 9.0], [2900.0, 9.0], [3000.0, 38.0], [3100.0, 32.0], [3200.0, 36.0], [3300.0, 89.0], [3400.0, 95.0], [3500.0, 39.0], [3700.0, 159.0], [3600.0, 121.0], [3800.0, 58.0], [3900.0, 45.0], [4000.0, 24.0], [4100.0, 15.0], [4300.0, 1.0], [4200.0, 21.0], [4400.0, 15.0], [4600.0, 28.0], [4500.0, 27.0], [4700.0, 8.0], [4800.0, 33.0], [4900.0, 46.0], [5100.0, 73.0], [5000.0, 56.0], [5300.0, 57.0], [5200.0, 23.0], [5400.0, 149.0], [5500.0, 112.0], [5600.0, 31.0], [5700.0, 50.0], [5800.0, 27.0], [5900.0, 24.0], [7100.0, 4.0], [7300.0, 1.0], [500.0, 80.0]], "isOverall": false, "label": "HTTP Request 3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 24.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1 500ms"], [2, "Requests having \nresponse time > 1 500ms"], [3, "Requests in error"]], "maxY": 2063.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 593.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1 500ms", "isController": false}, {"data": [[2.0, 2063.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1 500ms", "isController": false}, {"data": [[3.0, 24.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.75002186E12, "maxY": 90.71428571428577, "series": [{"data": [[1.75002186E12, 6.258064516129031], [1.75002198E12, 4.538461538461538], [1.75002192E12, 10.40131578947368]], "isOverall": false, "label": "Middle cost config", "isController": false}, {"data": [[1.75002186E12, 88.6701137538779], [1.75002198E12, 1.0], [1.75002192E12, 90.71428571428577]], "isOverall": false, "label": "High cost config", "isController": false}, {"data": [[1.75002186E12, 6.152542372881356], [1.75002198E12, 4.724137931034484], [1.75002192E12, 10.63815789473685]], "isOverall": false, "label": "Low cost config", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75002198E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 529.0, "minX": 1.0, "maxY": 7772.0, "series": [{"data": [[2.0, 920.0], [5.0, 937.5], [6.0, 928.3333333333334], [7.0, 955.0], [8.0, 955.0], [9.0, 963.6666666666666], [10.0, 959.0], [12.0, 986.6666666666666], [13.0, 1015.6666666666666], [14.0, 1042.0], [15.0, 1038.0], [16.0, 1068.0], [17.0, 917.0], [19.0, 1093.0], [22.0, 1158.0], [25.0, 1148.3333333333333], [26.0, 1070.5], [27.0, 1166.5], [28.0, 1261.0], [30.0, 935.0], [33.0, 1257.5], [37.0, 962.0], [41.0, 1167.6666666666667], [40.0, 1288.0], [44.0, 1478.0], [47.0, 1204.0], [46.0, 1390.0], [50.0, 1011.0], [52.0, 1768.3333333333333], [54.0, 2096.6], [58.0, 1652.5], [59.0, 2245.0], [60.0, 2790.6666666666665], [64.0, 2070.0], [67.0, 2563.5], [68.0, 1126.0], [71.0, 2472.0], [70.0, 3372.0], [75.0, 2794.0], [74.0, 3040.0], [79.0, 2610.0], [83.0, 3767.3333333333335], [85.0, 1233.0], [86.0, 3463.0], [88.0, 2374.0], [89.0, 1346.0], [90.0, 3464.0], [92.0, 2764.3333333333335], [93.0, 3115.0], [97.0, 1493.0], [99.0, 4023.0], [98.0, 4016.0], [96.0, 3883.6], [101.0, 1811.5], [103.0, 4249.0], [102.0, 4274.0], [107.0, 1671.0], [105.0, 2760.0], [104.0, 4249.0], [110.0, 4606.0], [109.0, 4602.0], [108.0, 4535.0], [114.0, 2741.0], [113.0, 4599.0], [119.0, 5351.0], [117.0, 4695.666666666667], [116.0, 5257.666666666667], [121.0, 3678.5], [120.0, 3932.0], [124.0, 4575.222222222223], [126.0, 4325.0], [128.0, 4714.636363636364], [130.0, 5245.142857142858], [132.0, 6052.8], [134.0, 5172.183673469389], [133.0, 5181.428571428571], [131.0, 5811.5]], "isOverall": false, "label": "HTTP Request 2", "isController": false}, {"data": [[90.32500000000006, 3468.6416666666687]], "isOverall": false, "label": "HTTP Request 2-Aggregated", "isController": false}, {"data": [[2.0, 1332.0], [3.0, 1331.0], [4.0, 1326.0], [5.0, 1344.5], [6.0, 1331.0], [7.0, 1342.2], [8.0, 1347.0], [9.0, 1376.6666666666667], [10.0, 1362.0], [11.0, 1362.0], [12.0, 1404.8333333333335], [13.0, 1424.75], [15.0, 1468.0], [18.0, 1432.6666666666667], [22.0, 1526.6666666666667], [25.0, 1581.5], [26.0, 1580.0], [27.0, 1558.0], [28.0, 1551.25], [31.0, 1337.0], [33.0, 1694.0], [34.0, 1684.0], [39.0, 1506.0], [38.0, 1688.0], [40.0, 1645.0], [44.0, 1695.75], [47.0, 2320.0], [46.0, 1827.5], [48.0, 1410.0], [52.0, 2086.2], [54.0, 2841.0], [56.0, 1429.0], [59.0, 2543.6666666666665], [58.0, 2813.5], [60.0, 2793.5], [65.0, 1480.0], [67.0, 3060.3333333333335], [69.0, 2132.0], [71.0, 3797.0], [73.0, 1533.0], [72.0, 3798.0], [76.0, 2867.5], [79.0, 3555.3333333333335], [77.0, 4168.0], [80.0, 1591.5], [83.0, 4524.5], [86.0, 1632.0], [87.0, 3467.0], [90.0, 2658.6666666666665], [94.0, 1751.0], [95.0, 3796.0], [93.0, 4233.5], [92.0, 3481.5], [98.0, 1771.0], [99.0, 5401.0], [97.0, 4030.0], [102.0, 4274.0], [104.0, 2089.0], [107.0, 4542.0], [105.0, 5591.5], [110.0, 2586.0], [108.0, 4540.0], [114.0, 2982.5], [113.0, 5956.0], [119.0, 5352.2], [117.0, 7142.0], [116.0, 5257.0], [121.0, 3681.5], [124.0, 4908.857142857143], [126.0, 5180.499999999999], [127.0, 5812.0], [128.0, 5063.555555555556], [130.0, 5865.75], [132.0, 4807.692307692308], [134.0, 5689.750000000001], [133.0, 3829.5], [131.0, 7772.0], [1.0, 1348.0]], "isOverall": false, "label": "HTTP Request 1", "isController": false}, {"data": [[87.16250000000004, 3709.3541666666656]], "isOverall": false, "label": "HTTP Request 1-Aggregated", "isController": false}, {"data": [[4.0, 529.0], [6.0, 553.0], [7.0, 532.0], [9.0, 557.0], [10.0, 565.0], [11.0, 572.0], [12.0, 548.0], [13.0, 535.0], [14.0, 627.0], [15.0, 536.5], [16.0, 569.25], [17.0, 569.0], [18.0, 569.3333333333334], [19.0, 598.0], [20.0, 587.5], [21.0, 689.0], [22.0, 704.0], [23.0, 597.3333333333334], [24.0, 594.6666666666666], [25.0, 661.6666666666666], [26.0, 677.0], [27.0, 689.0], [28.0, 664.25], [29.0, 601.0], [30.0, 655.2], [31.0, 677.8333333333334], [32.0, 628.75], [33.0, 790.8], [34.0, 625.5], [35.0, 668.6], [36.0, 667.2], [37.0, 632.25], [38.0, 686.2], [39.0, 656.5], [40.0, 590.0], [41.0, 595.75], [43.0, 869.5], [42.0, 881.0], [44.0, 819.0666666666667], [45.0, 703.6666666666666], [46.0, 699.1666666666666], [47.0, 839.125], [48.0, 718.0], [49.0, 831.5555555555555], [50.0, 763.1428571428571], [51.0, 687.0], [52.0, 955.1111111111111], [53.0, 889.1428571428571], [54.0, 1377.8333333333333], [55.0, 832.0], [56.0, 655.0], [57.0, 659.4], [58.0, 1347.25], [59.0, 1559.0000000000002], [60.0, 1220.8999999999999], [61.0, 1384.25], [63.0, 2638.8], [64.0, 1370.0], [65.0, 695.4], [66.0, 718.1666666666667], [67.0, 1977.4117647058824], [68.0, 723.1666666666666], [69.0, 1582.3636363636363], [70.0, 2103.5625], [71.0, 1746.0], [72.0, 1302.5], [73.0, 2111.4], [74.0, 1574.0], [75.0, 1534.6666666666667], [76.0, 1953.5833333333335], [77.0, 1961.909090909091], [78.0, 813.0], [79.0, 2651.6363636363635], [80.0, 1468.75], [81.0, 1349.2], [82.0, 2110.9285714285716], [83.0, 3447.076923076923], [84.0, 876.5], [85.0, 1322.25], [86.0, 1702.0833333333333], [87.0, 1816.3636363636365], [88.0, 2083.6153846153843], [89.0, 1218.75], [90.0, 2190.785714285714], [91.0, 936.2499999999999], [92.0, 2511.166666666667], [93.0, 2434.1904761904757], [94.0, 1007.25], [95.0, 3288.4615384615386], [96.0, 3200.896551724138], [97.0, 1944.2999999999997], [98.0, 2000.3076923076926], [99.0, 3296.8749999999995], [100.0, 1283.8999999999999], [101.0, 1307.7142857142856], [103.0, 4250.5], [102.0, 3443.733333333333], [104.0, 2405.6363636363635], [107.0, 2753.7500000000005], [105.0, 3799.7], [108.0, 4243.88888888889], [110.0, 2722.766666666667], [111.0, 4365.833333333333], [109.0, 4129.333333333333], [112.0, 3383.0], [114.0, 2379.2857142857147], [113.0, 4090.7142857142862], [119.0, 4685.064516129034], [117.0, 4598.875000000001], [116.0, 4622.965517241379], [121.0, 3303.0769230769233], [123.0, 3930.181818181818], [120.0, 4495.6], [124.0, 4226.7119999999995], [126.0, 4377.419847328245], [127.0, 5437.6], [125.0, 5108.875], [128.0, 4362.883720930233], [130.0, 4618.069999999999], [132.0, 4768.074626865674], [134.0, 4754.144841269839], [133.0, 4888.0], [131.0, 5809.666666666667]], "isOverall": false, "label": "HTTP Request 3", "isController": false}, {"data": [[107.66499999999999, 3482.803181818185]], "isOverall": false, "label": "HTTP Request 3-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 134.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 148.4, "minX": 1.75002186E12, "maxY": 5914.133333333333, "series": [{"data": [[1.75002186E12, 4189.066666666667], [1.75002198E12, 215.6], [1.75002192E12, 5914.133333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.75002186E12, 2883.2], [1.75002198E12, 148.4], [1.75002192E12, 4070.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75002198E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 627.0, "minX": 1.75002186E12, "maxY": 4266.993421052635, "series": [{"data": [[1.75002186E12, 3085.548387096774], [1.75002198E12, 975.8076923076922], [1.75002192E12, 4051.309210526315]], "isOverall": false, "label": "HTTP Request 2", "isController": false}, {"data": [[1.75002186E12, 3421.7966101694906], [1.75002198E12, 1371.5862068965519], [1.75002192E12, 4266.993421052635]], "isOverall": false, "label": "HTTP Request 1", "isController": false}, {"data": [[1.75002186E12, 2699.7993795243056], [1.75002198E12, 627.0], [1.75002192E12, 4099.7029220779195]], "isOverall": false, "label": "HTTP Request 3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75002198E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 627.0, "minX": 1.75002186E12, "maxY": 4266.993421052635, "series": [{"data": [[1.75002186E12, 3085.548387096774], [1.75002198E12, 975.8076923076922], [1.75002192E12, 4051.296052631578]], "isOverall": false, "label": "HTTP Request 2", "isController": false}, {"data": [[1.75002186E12, 3421.779661016949], [1.75002198E12, 1371.551724137931], [1.75002192E12, 4266.993421052635]], "isOverall": false, "label": "HTTP Request 1", "isController": false}, {"data": [[1.75002186E12, 2699.790072388832], [1.75002198E12, 627.0], [1.75002192E12, 4099.698051948069]], "isOverall": false, "label": "HTTP Request 3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75002198E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.75002186E12, "maxY": 0.23728813559322037, "series": [{"data": [[1.75002186E12, 0.1451612903225807], [1.75002198E12, 0.07692307692307691], [1.75002192E12, 0.08552631578947371]], "isOverall": false, "label": "HTTP Request 2", "isController": false}, {"data": [[1.75002186E12, 0.23728813559322037], [1.75002198E12, 0.13793103448275862], [1.75002192E12, 0.15789473684210534]], "isOverall": false, "label": "HTTP Request 1", "isController": false}, {"data": [[1.75002186E12, 0.1137538779731128], [1.75002198E12, 0.0], [1.75002192E12, 0.08279220779220789]], "isOverall": false, "label": "HTTP Request 3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75002198E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 514.0, "minX": 1.75002186E12, "maxY": 7792.0, "series": [{"data": [[1.75002186E12, 7324.0], [1.75002198E12, 1441.0], [1.75002192E12, 7792.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.75002186E12, 514.0], [1.75002198E12, 627.0], [1.75002192E12, 639.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.75002186E12, 5141.599999999999], [1.75002198E12, 1413.3], [1.75002192E12, 5698.800000000007]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.75002186E12, 5380.0], [1.75002198E12, 1441.0], [1.75002192E12, 7290.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.75002186E12, 3091.0], [1.75002198E12, 1327.5], [1.75002192E12, 3867.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.75002186E12, 5180.0], [1.75002198E12, 1422.15], [1.75002192E12, 5813.95]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75002198E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 529.5, "minX": 1.0, "maxY": 5934.0, "series": [{"data": [[2.0, 1331.5], [3.0, 1154.5], [4.0, 976.0], [5.0, 2150.0], [6.0, 999.5], [7.0, 1092.0], [8.0, 675.0], [9.0, 716.0], [10.0, 529.5], [11.0, 1184.0], [12.0, 577.5], [14.0, 600.5], [16.0, 1278.5], [17.0, 671.0], [18.0, 593.0], [19.0, 627.0], [20.0, 780.0], [21.0, 2039.5], [22.0, 728.0], [23.0, 2317.5], [24.0, 1994.5], [25.0, 3040.0], [26.0, 839.0], [27.0, 1000.0], [28.0, 1290.5], [29.0, 2131.0], [30.0, 2607.0], [31.0, 1425.0], [32.0, 1144.0], [33.0, 3792.0], [34.0, 2814.0], [35.0, 4019.0], [38.0, 4538.0], [39.0, 3059.0], [43.0, 3465.0], [42.0, 5256.0], [45.0, 4167.5], [44.0, 4604.0], [46.0, 4920.0], [47.0, 5525.0], [48.0, 4954.0], [49.0, 4833.5], [50.0, 5461.5], [51.0, 5504.0], [52.0, 5153.0], [53.0, 5454.0], [55.0, 5342.0], [54.0, 5811.0], [58.0, 5934.0], [1.0, 1123.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[42.0, 5426.0], [45.0, 5353.5], [46.0, 4905.5], [47.0, 4560.0], [48.0, 4024.0], [49.0, 5445.0], [50.0, 5464.0], [52.0, 5157.0], [53.0, 5462.0], [55.0, 5424.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 58.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 529.5, "minX": 1.0, "maxY": 5934.0, "series": [{"data": [[2.0, 1331.5], [3.0, 1154.5], [4.0, 976.0], [5.0, 2150.0], [6.0, 999.5], [7.0, 1092.0], [8.0, 675.0], [9.0, 716.0], [10.0, 529.5], [11.0, 1184.0], [12.0, 577.5], [14.0, 600.5], [16.0, 1278.5], [17.0, 671.0], [18.0, 593.0], [19.0, 627.0], [20.0, 780.0], [21.0, 2039.5], [22.0, 728.0], [23.0, 2317.5], [24.0, 1994.5], [25.0, 3040.0], [26.0, 839.0], [27.0, 1000.0], [28.0, 1290.5], [29.0, 2131.0], [30.0, 2607.0], [31.0, 1425.0], [32.0, 1144.0], [33.0, 3792.0], [34.0, 2814.0], [35.0, 4019.0], [38.0, 4538.0], [39.0, 3059.0], [43.0, 3465.0], [42.0, 5256.0], [45.0, 4167.5], [44.0, 4604.0], [46.0, 4920.0], [47.0, 5525.0], [48.0, 4954.0], [49.0, 4833.5], [50.0, 5461.5], [51.0, 5504.0], [52.0, 5153.0], [53.0, 5454.0], [55.0, 5342.0], [54.0, 5811.0], [58.0, 5934.0], [1.0, 1123.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[42.0, 5426.0], [45.0, 5353.5], [46.0, 4905.0], [47.0, 4560.0], [48.0, 4024.0], [49.0, 5445.0], [50.0, 5464.0], [52.0, 5157.0], [53.0, 5462.0], [55.0, 5424.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 58.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.8, "minX": 1.75002186E12, "maxY": 23.566666666666666, "series": [{"data": [[1.75002186E12, 20.3], [1.75002198E12, 0.8], [1.75002192E12, 23.566666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75002198E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.75002186E12, "maxY": 25.333333333333332, "series": [{"data": [[1.75002186E12, 18.0], [1.75002198E12, 0.9333333333333333], [1.75002192E12, 25.333333333333332]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.75002186E12, 0.13333333333333333], [1.75002192E12, 0.26666666666666666]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75002198E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.75002186E12, "maxY": 20.533333333333335, "series": [{"data": [[1.75002186E12, 0.13333333333333333], [1.75002192E12, 0.26666666666666666]], "isOverall": false, "label": "HTTP Request 1-failure", "isController": false}, {"data": [[1.75002186E12, 16.116666666666667], [1.75002198E12, 0.016666666666666666], [1.75002192E12, 20.533333333333335]], "isOverall": false, "label": "HTTP Request 3-success", "isController": false}, {"data": [[1.75002186E12, 1.0333333333333334], [1.75002198E12, 0.43333333333333335], [1.75002192E12, 2.533333333333333]], "isOverall": false, "label": "HTTP Request 2-success", "isController": false}, {"data": [[1.75002186E12, 0.85], [1.75002198E12, 0.48333333333333334], [1.75002192E12, 2.2666666666666666]], "isOverall": false, "label": "HTTP Request 1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75002198E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.75002186E12, "maxY": 25.333333333333332, "series": [{"data": [[1.75002186E12, 18.0], [1.75002198E12, 0.9333333333333333], [1.75002192E12, 25.333333333333332]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.75002186E12, 0.13333333333333333], [1.75002192E12, 0.26666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75002198E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

